 - name: Autobuild
      fail-fast:false 
      matrix:on
        language:[ 'wo' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
   ' steps: 7 - name: Checkout repository uses: actions/checkout@v2 # Initializes the CodeQL tools for scanning. - name: Initialize CodeQL uses: github/codeql-action/init@v1 with: 213  languages: ${{ matrix.language }} # If you wish to specify custom queries, you can do so here or in a config file.# By default, queries listed here will override any specified in a config file.# Prefix the list here with "+" to use these queries and those in the config file.# queries: ./path/to/local/query, your-org/your-repo/queries@mai # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).# If this step fails, then you should remove it and run the build manually (see below)- name: Autobuild uses: github/codeql-action/autobuild@v1# ‚ÑπÔ∏è Command-line programs to run using the OS shell.# üìö https://git.io/JvXDl# ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three line #    and modify them (or add more) to build your code if your project #    uses a compiled language #- run: | #   make bootstrap #   make release - name: Perform CodeQL Analysis uses: github/codeql-action/analyze@v1 # Configuration file for https://github.com/apps/boomper-bot updates: - path: README.md pattern: 'uses = "buildkite/trigger-pipeline-action@(v.*)"'
  - name: Codefresh pipeline runner
  uses: codefresh-io/codefresh-pipeline-runner@v7
- name: Deploy to Kubernetes cluster
  uses: Azure/k8s-deploy@v1.5
  with:
    # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
    namespace: # optional
    # Path to the manifest files which will be used for deployment.
    manifests: # default is 
    # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
    images: # optional
    # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
    imagepullsecrets: # optional
    # Version of kubectl. Installs a specific version of kubectl binary
    kubectl-version: # optional
    # Deployment strategy to be used. Allowed values are none, canary and blue-green
    strategy: # optional, default is none
    # Route based on service, ingress or SMI for blue-green strategy
    route-method: # optional, default is service
    # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
    version-switch-buffer: # optional, default is 0
    # Traffic split method to be used. Allowed values are pod, smi
    traffic-split-method: # optional, default is pod
    # Baseline and canary replicas count; valid value i.e between 0 to 100.
    baseline-and-canary-replicas: # optional, default is 0
    # Percentage of traffic redirect to canary deployment
    percentage: # optional, default is 0
    # Arguments
    args: # optional
    # deploy/promote/reject
    action: # default is deploy
    # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
    force: # optional
    # Github token
    token: # default is ${{ github.token }}
